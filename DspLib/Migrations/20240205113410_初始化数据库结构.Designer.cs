// <auto-generated />
using DspLib.DataBase;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DspLib.Migrations
{
    [DbContext(typeof(DspDbContext))]
    [Migration("20240205113410_初始化数据库结构")]
    partial class 初始化数据库结构
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("DspLib.DataBase.SeedGalaxyInfo", b =>
                {
                    b.Property<int>("SeedGalaxyInfoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<uint>("SeedInfoId")
                        .HasColumnType("INT(4) UNSIGNED");

                    b.Property<byte?>("光谱类型")
                        .HasColumnType("TINYINT(1) UNSIGNED");

                    b.Property<float>("恒星光度")
                        .HasColumnType("float");

                    b.Property<byte>("恒星类型")
                        .HasColumnType("TINYINT(1) UNSIGNED");

                    b.Property<byte>("星球数量")
                        .HasColumnType("TINYINT(1) UNSIGNED");

                    b.Property<string>("星球类型")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<float>("星系坐标x")
                        .HasColumnType("float");

                    b.Property<float>("星系坐标y")
                        .HasColumnType("float");

                    b.Property<float>("星系坐标z")
                        .HasColumnType("float");

                    b.Property<float>("星系距离")
                        .HasColumnType("float");

                    b.Property<bool>("是否有水")
                        .HasColumnType("tinyint(1)");

                    b.Property<byte>("最多卫星")
                        .HasColumnType("TINYINT(1) UNSIGNED");

                    b.Property<bool>("有硫酸否")
                        .HasColumnType("tinyint(1)");

                    b.Property<byte>("潮汐星数")
                        .HasColumnType("TINYINT(1) UNSIGNED");

                    b.Property<bool>("环盖首星")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("SeedGalaxyInfoId");

                    b.HasIndex("SeedInfoId");

                    b.ToTable("SeedGalaxyInfo");
                });

            modelBuilder.Entity("DspLib.DataBase.SeedInfo", b =>
                {
                    b.Property<uint>("SeedInfoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INT(4) UNSIGNED");

                    b.Property<int>("冰冻星球数")
                        .HasColumnType("int");

                    b.Property<int>("巨星数")
                        .HasColumnType("int");

                    b.Property<int>("总星球数量")
                        .HasColumnType("int");

                    b.Property<float>("星球总亮度")
                        .HasColumnType("float");

                    b.Property<int>("最多卫星")
                        .HasColumnType("int");

                    b.Property<int>("最多潮汐星")
                        .HasColumnType("int");

                    b.Property<int>("最多潮汐永昼永夜")
                        .HasColumnType("int");

                    b.Property<float>("最高亮度")
                        .HasColumnType("float");

                    b.Property<int>("气态星球数")
                        .HasColumnType("int");

                    b.Property<int>("沙漠星球数")
                        .HasColumnType("int");

                    b.Property<int>("海洋星球数")
                        .HasColumnType("int");

                    b.Property<int>("潮汐星球数")
                        .HasColumnType("int");

                    b.Property<int>("潮汐永昼永夜数")
                        .HasColumnType("int");

                    b.Property<int>("熔岩星球数")
                        .HasColumnType("int");

                    b.Property<int>("种子号")
                        .HasColumnType("INT(4)");

                    b.HasKey("SeedInfoId");

                    b.ToTable("SeedInfo");
                });

            modelBuilder.Entity("DspLib.DataBase.SeedPlanetsTypeCountInfo", b =>
                {
                    b.Property<int>("SeedPlanetsTypeCountInfoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<uint>("SeedInfoId")
                        .HasColumnType("INT(4) UNSIGNED");

                    b.Property<byte>("冰原冻土")
                        .HasColumnType("TINYINT(1) UNSIGNED");

                    b.Property<byte>("冰巨星1")
                        .HasColumnType("TINYINT(1) UNSIGNED");

                    b.Property<byte>("冰巨星2")
                        .HasColumnType("TINYINT(1) UNSIGNED");

                    b.Property<byte>("地中海")
                        .HasColumnType("TINYINT(1) UNSIGNED");

                    b.Property<byte>("干旱荒漠")
                        .HasColumnType("TINYINT(1) UNSIGNED");

                    b.Property<byte>("戈壁")
                        .HasColumnType("TINYINT(1) UNSIGNED");

                    b.Property<byte>("极寒冻土")
                        .HasColumnType("TINYINT(1) UNSIGNED");

                    b.Property<byte>("樱林海")
                        .HasColumnType("TINYINT(1) UNSIGNED");

                    b.Property<byte>("橙晶荒漠")
                        .HasColumnType("TINYINT(1) UNSIGNED");

                    b.Property<byte>("气态巨星1")
                        .HasColumnType("TINYINT(1) UNSIGNED");

                    b.Property<byte>("气态巨星2")
                        .HasColumnType("TINYINT(1) UNSIGNED");

                    b.Property<byte>("气态巨星3")
                        .HasColumnType("TINYINT(1) UNSIGNED");

                    b.Property<byte>("水世界")
                        .HasColumnType("TINYINT(1) UNSIGNED");

                    b.Property<byte>("海洋丛林")
                        .HasColumnType("TINYINT(1) UNSIGNED");

                    b.Property<byte>("潘多拉沼泽")
                        .HasColumnType("TINYINT(1) UNSIGNED");

                    b.Property<byte>("火山灰")
                        .HasColumnType("TINYINT(1) UNSIGNED");

                    b.Property<byte>("灰烬冻土")
                        .HasColumnType("TINYINT(1) UNSIGNED");

                    b.Property<byte>("热带草原")
                        .HasColumnType("TINYINT(1) UNSIGNED");

                    b.Property<byte>("熔岩")
                        .HasColumnType("TINYINT(1) UNSIGNED");

                    b.Property<byte>("猩红冰湖")
                        .HasColumnType("TINYINT(1) UNSIGNED");

                    b.Property<byte>("红石")
                        .HasColumnType("TINYINT(1) UNSIGNED");

                    b.Property<byte>("草原")
                        .HasColumnType("TINYINT(1) UNSIGNED");

                    b.Property<byte>("贫瘠荒漠")
                        .HasColumnType("TINYINT(1) UNSIGNED");

                    b.Property<byte>("飓风石林")
                        .HasColumnType("TINYINT(1) UNSIGNED");

                    b.Property<byte>("黑石盐滩")
                        .HasColumnType("TINYINT(1) UNSIGNED");

                    b.HasKey("SeedPlanetsTypeCountInfoId");

                    b.HasIndex("SeedInfoId")
                        .IsUnique();

                    b.ToTable("SeedPlanetsTypeCountInfo");
                });

            modelBuilder.Entity("DspLib.DataBase.SeedStarsTypeCountInfo", b =>
                {
                    b.Property<int>("SeedStarsTypeCountInfoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<byte>("A型巨星")
                        .HasColumnType("TINYINT(1) UNSIGNED");

                    b.Property<byte>("A型恒星")
                        .HasColumnType("TINYINT(1) UNSIGNED");

                    b.Property<byte>("B型巨星")
                        .HasColumnType("TINYINT(1) UNSIGNED");

                    b.Property<byte>("B型恒星")
                        .HasColumnType("TINYINT(1) UNSIGNED");

                    b.Property<byte>("F型巨星")
                        .HasColumnType("TINYINT(1) UNSIGNED");

                    b.Property<byte>("F型恒星")
                        .HasColumnType("TINYINT(1) UNSIGNED");

                    b.Property<byte>("G型巨星")
                        .HasColumnType("TINYINT(1) UNSIGNED");

                    b.Property<byte>("G型恒星")
                        .HasColumnType("TINYINT(1) UNSIGNED");

                    b.Property<byte>("K型巨星")
                        .HasColumnType("TINYINT(1) UNSIGNED");

                    b.Property<byte>("K型恒星")
                        .HasColumnType("TINYINT(1) UNSIGNED");

                    b.Property<byte>("M型巨星")
                        .HasColumnType("TINYINT(1) UNSIGNED");

                    b.Property<byte>("M型恒星")
                        .HasColumnType("TINYINT(1) UNSIGNED");

                    b.Property<byte>("O型巨星")
                        .HasColumnType("TINYINT(1) UNSIGNED");

                    b.Property<byte>("O型恒星")
                        .HasColumnType("TINYINT(1) UNSIGNED");

                    b.Property<uint>("SeedInfoId")
                        .HasColumnType("INT(4) UNSIGNED");

                    b.Property<byte>("X型巨星")
                        .HasColumnType("TINYINT(1) UNSIGNED");

                    b.Property<byte>("X型恒星")
                        .HasColumnType("TINYINT(1) UNSIGNED");

                    b.Property<byte>("中子星")
                        .HasColumnType("TINYINT(1) UNSIGNED");

                    b.Property<byte>("白矮星")
                        .HasColumnType("TINYINT(1) UNSIGNED");

                    b.Property<byte>("黑洞")
                        .HasColumnType("TINYINT(1) UNSIGNED");

                    b.HasKey("SeedStarsTypeCountInfoId");

                    b.HasIndex("SeedInfoId")
                        .IsUnique();

                    b.ToTable("SeedStarsTypeCountInfo");
                });

            modelBuilder.Entity("DspLib.DataBase.SeedGalaxyInfo", b =>
                {
                    b.HasOne("DspLib.DataBase.SeedInfo", "SeedInfo")
                        .WithMany("SeedGalaxyInfos")
                        .HasForeignKey("SeedInfoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SeedInfo");
                });

            modelBuilder.Entity("DspLib.DataBase.SeedPlanetsTypeCountInfo", b =>
                {
                    b.HasOne("DspLib.DataBase.SeedInfo", "SeedInfo")
                        .WithOne("SeedPlanetsTypeCountInfo")
                        .HasForeignKey("DspLib.DataBase.SeedPlanetsTypeCountInfo", "SeedInfoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SeedInfo");
                });

            modelBuilder.Entity("DspLib.DataBase.SeedStarsTypeCountInfo", b =>
                {
                    b.HasOne("DspLib.DataBase.SeedInfo", "SeedInfo")
                        .WithOne("SeedStarsTypeCountInfo")
                        .HasForeignKey("DspLib.DataBase.SeedStarsTypeCountInfo", "SeedInfoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SeedInfo");
                });

            modelBuilder.Entity("DspLib.DataBase.SeedInfo", b =>
                {
                    b.Navigation("SeedGalaxyInfos");

                    b.Navigation("SeedPlanetsTypeCountInfo")
                        .IsRequired();

                    b.Navigation("SeedStarsTypeCountInfo")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
